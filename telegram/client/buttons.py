from aiogram.types import KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from .callbacks import RouteInputCallback


# Main menu buttons.
route_schedule_button = KeyboardButton(text='üöå –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞')
cost_travel_bttuon = KeyboardButton(text='üí∏ –£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∑–¥–∞')
strelka_question_button = KeyboardButton(text='üöÄ –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –°—Ç—Ä–µ–ª–∫–µ')
troika_question_button = KeyboardButton(text='üé´ –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –¢—Ä–æ–π–∫–µ')
card_question_button = KeyboardButton(text='üí≥ –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ë–ö')
general_question_button = KeyboardButton(text='üí° –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã')
consultation_button = KeyboardButton(text='üôãüèª‚Äç‚ôÇÔ∏è –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã / –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è')
info_button = KeyboardButton(text='‚ÑπÔ∏è –°–ø—Ä–∞–≤–æ—á–Ω–æ–µ –∏–Ω—Ñ–æ')

def get_main_keyboard():
    keyboard = ReplyKeyboardMarkup(
        keyboard = [
            [route_schedule_button],
            [cost_travel_bttuon],
            [strelka_question_button],
            [troika_question_button],
            [card_question_button],
            [general_question_button],
            [consultation_button],
            [info_button],
        ],
        resize_keyboard = True,
    )
    return keyboard

# Schedule routes inline buttons.
def get_schedule_date_keyboard():
    buttons = [
        [InlineKeyboardButton(text='–°–µ–≥–æ–¥–Ω—è', callback_data="today")],
        [InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É', callback_data="get_date")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def get_route_input_type_keyboard():
    buttons = [
        [InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ', callback_data=RouteInputCallback(action='name').pack())],
        [InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä', callback_data=RouteInputCallback(action='number').pack())]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

# Strelka inline buttons.
exchenge_section_questions = [
    '–ö–∞–∫ –ø–æ–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç—É "–°—Ç—Ä–µ–ª–∫–∞?"',
    '–ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç—É "–°—Ç—Ä–µ–ª–∫–∞" –∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–ª–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞—Ä—Ç—ã?',
    '–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ —Å –∫–∞—Ä—Ç—ã "–°—Ç—Ä–µ–ª–∫–∞" –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç?',
    '–ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞ –±–∏–ª–µ—Ç—ã/–∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–µ–∑–¥–∞ –Ω–∞ –ø—Ä–∏–≥–æ—Ä–æ–¥–Ω—ã—Ö —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞—Ö, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞ –∫–∞—Ä—Ç—É "–°—Ç—Ä–µ–ª–∫–∞"?',
    '–ö–∞–∫ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–æ–∫ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Å –∫–∞—Ä—Ç—ã "–°—Ç—Ä–µ–ª–∫–∞" –Ω–∞ –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É?',
    '–ü–æ—Å–ª–µ –æ–±–º–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –ø–æ –∫–∞—Ä—Ç–µ "–°—Ç—Ä–µ–ª–∫–∞", –µ—Å–ª–∏ –ø–∞—Å—Å–∞–∂–∏—Ä—É –≤—ã–¥–∞—é—Ç –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É ?'
]

tariffs_section_questions = [
    '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø—Ä–æ–µ–∑–¥ –ø–æ –ª—å–≥–æ—Ç–Ω–æ–π –∫–∞—Ä—Ç–µ "–°—Ç—Ä–µ–ª–∫–∞"?',
    '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø—Ä–æ–µ–∑–¥ –ø–æ –∫–∞—Ä—Ç–µ "–°—Ç—Ä–µ–ª–∫–∞" —É—á–∞—â–µ–≥–æ—Å—è –∏ "–°—Ç—Ä–µ–ª–∫–∞" —É—á–∞—â–µ–≥–æ—Å—è —Å–µ–ª—å—Å–∫–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏?',
    '',
    '',
    '',
    ''
]

mobile_section_questions = [
    '–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–±–∏–ª—å–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º "–°—Ç—Ä–µ–ª–∫–∞"?',
    '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "–°—Ç—Ä–µ–ª–∫–∞"'
]

def get_sections_strelka_keyboard():
    buttons = [
        [InlineKeyboardButton(text='–û–±–º–µ–Ω –∏ –≤–æ–∑–≤—Ä–∞—Ç', callback_data="exchange")],
        [InlineKeyboardButton(text='–¢–∞—Ä–∏—Ñ—ã –∏ –º–∞—Ä—à—Ä—É—Ç—ã', callback_data="tariffs")],
        [InlineKeyboardButton(text='–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', callback_data="mobile")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

# Troika inline buttons.
troika_questions = [
    ('–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø—Ä–æ–µ–∑–¥?', 'troika_cost'),
    ('–î–µ–π—Å—Ç–≤—É–µ—Ç –ª–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –¢—Ä–æ–π–∫–æ–π?', 'troika_loyalty'),
    ('–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –¢—Ä–æ–π–∫—É?', 'troika_fill'),
    ('–ì–¥–µ –∫—É–ø–∏—Ç—å –¢—Ä–æ–π–∫—É?', 'troika_buy'),
]

def get_troika_questions_keyboard():
    buttons = []
    for question in troika_questions:
        buttons.append([InlineKeyboardButton(text=question[0], callback_data=question[1])])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


# Bank card inline buttons.
bank_card_questions = [
    ('–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø—Ä–æ–µ–∑–¥?', 'card_cost'),
    ('–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ–µ–∑–¥ –ë–ö –Ω–∞ –æ–¥–Ω–æ–º —Ä–µ–π—Å–µ?', 'card_count_pay'),
    ('–ì–¥–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–µ–∑–¥–æ–∫?', 'card_history'),
    ('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ–µ–∑–¥?', 'card_error'),
    ('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ–µ–∑–¥ –ë–ö —Å –ø–æ–º–æ—â—å—é —Ç–µ–ª–µ—Ñ–æ–Ω–∞?', 'card_error_phone'),
    ('–ö–∞–∫ –ø–æ–≥–∞—Å–∏—Ç—å –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å?', 'card_debt'),
]

def get_bank_card_questions_keyboard():
    buttons = []
    for question in bank_card_questions:
        buttons.append([InlineKeyboardButton(text=question[0], callback_data=question[1])])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


# Reference info inline buttons.
def get_sections_info_keyboard():
    buttons = [
        [InlineKeyboardButton(text='–ü–µ—Ä–µ—á–µ–Ω—å', callback_data="list")],
        [InlineKeyboardButton(text='–í–µ–¥–æ–º—Å—Ç–≤–æ', callback_data="department")],
    ] 

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

# Cancel buttons.
